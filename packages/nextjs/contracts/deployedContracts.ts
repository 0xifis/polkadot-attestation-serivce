/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from "~~/utils/scaffold-eth/contract";

const deployedContracts = {
  1287: {
    AttestationService: {
      address: "0x7cC486d012d60FAee85d0cE6037f439174b528D6",
      abi: [
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "attestationId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "schemaId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "address",
              name: "issuer",
              type: "address",
            },
            {
              indexed: false,
              internalType: "address",
              name: "subject",
              type: "address",
            },
          ],
          name: "AttestationRegistered",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "schemaId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              indexed: false,
              internalType: "address",
              name: "creator",
              type: "address",
            },
          ],
          name: "SchemaRegistered",
          type: "event",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "attestationId",
              type: "uint256",
            },
          ],
          name: "getAttestation",
          outputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "id",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "schemaId",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "data",
                  type: "string",
                },
                {
                  internalType: "address",
                  name: "issuer",
                  type: "address",
                },
                {
                  internalType: "address",
                  name: "subject",
                  type: "address",
                },
              ],
              internalType: "struct AttestationService.Attestation",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "schemaId",
              type: "uint256",
            },
          ],
          name: "getSchema",
          outputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "id",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "name",
                  type: "string",
                },
                {
                  internalType: "address",
                  name: "creator",
                  type: "address",
                },
              ],
              internalType: "struct AttestationService.Schema",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getTotalAttestations",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "getTotalSchemas",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "schemaId",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "data",
              type: "string",
            },
            {
              internalType: "address",
              name: "subject",
              type: "address",
            },
          ],
          name: "registerAttestation",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              components: [
                {
                  internalType: "string",
                  name: "name",
                  type: "string",
                },
                {
                  internalType: "enum AttestationService.DataType",
                  name: "dataType",
                  type: "uint8",
                },
              ],
              internalType: "struct AttestationService.SchemaProperty[]",
              name: "properties",
              type: "tuple[]",
            },
          ],
          name: "registerSchema",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "schemaProperties",
          outputs: [
            {
              internalType: "string",
              name: "name",
              type: "string",
            },
            {
              internalType: "enum AttestationService.DataType",
              name: "dataType",
              type: "uint8",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
  },
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;
